---
import SiteLayout from "@/layouts/SiteLayout.astro";
import PostGrid from "@/components/blog/PostGrid.astro";
import { defaultLocale, locales } from "@/i18n/config";
import { paginatePosts } from "@/lib/blog";
import { messagesByLocale } from "@/lib/messages";
import { translate, type MessageDictionary } from "@/i18n/translator";
import { buildCanonicalUrl, buildLanguageAlternates } from "@/lib/seo";
import { toExplorerPosts } from "@/lib/blog-explorer";
import { notFound } from "@/lib/http";

export function getStaticPaths() {
  const pagination = paginatePosts(defaultLocale, 1);
  const totalPages = pagination.totalPages;
  const paths: Array<{ params: { page: string } }> = [];
  for (let page = 2; page <= totalPages; page += 1) {
    paths.push({ params: { page: String(page) } });
  }
  return paths;
}

const rawPage = Astro.params.page;
const pageNumber = rawPage ? Number.parseInt(rawPage, 10) : NaN;

if (!rawPage || Number.isNaN(pageNumber) || pageNumber < 1) {
  return notFound();
}

const pagination = paginatePosts(defaultLocale, pageNumber);
if (pageNumber > pagination.totalPages || pagination.totalCount === 0) {
  return notFound();
}

const messages = messagesByLocale[defaultLocale] as MessageDictionary;
const pagePosts = toExplorerPosts(pagination.items, defaultLocale);

const title = translate(messages, "Pagination.archiveTitle", { page: pageNumber });
const description = translate(messages, "Pagination.archiveDescription", { page: pageNumber });
const summary = translate(messages, "Pagination.pageSummary", {
  page: pageNumber,
  total: pagination.totalPages,
});
const previousLabel = translate(messages, "Pagination.previous");
const nextLabel = translate(messages, "Pagination.next");
const readMoreLabel = translate(messages, "Blog.readMore");

const path = pageNumber === 1 ? "/blog/" : `/blog/page/${pageNumber}/`;
const canonical = buildCanonicalUrl(defaultLocale, path);
const availableLocales = locales.filter((locale) => {
  const pageInfo = paginatePosts(locale, 1);
  return pageInfo.totalPages >= pageNumber && pageInfo.totalPages > 1;
});
const languageAlternates =
  availableLocales.length > 0 ? buildLanguageAlternates(path, { locales: availableLocales }) : undefined;
---
<SiteLayout
  locale={defaultLocale}
  title={title}
  description={description}
  canonical={canonical}
  languageAlternates={languageAlternates}
>
  <main class="relative z-10 flex flex-col gap-10 py-8 sm:py-12">
    <div class="mx-auto w-[92%] max-w-6xl px-4 sm:px-6">
      <section class="flex flex-col gap-4 rounded-[2rem] border border-[#eadfcd]/70 bg-white/70 p-5 text-sm text-[#4b4139] shadow-[0_24px_70px_-40px_rgba(40,30,20,0.4)] sm:p-8">
        <p class="text-xs font-semibold uppercase tracking-[0.3em] text-[#7c6d5d]">
          {translate(messages, "Pagination.pageLabel", { page: pageNumber })}
        </p>
        <h1 class="text-[clamp(1.8rem,4.5vw,2.6rem)] font-semibold leading-tight text-[#2f2b26]">
          {title}
        </h1>
        <p>{description}</p>
      </section>
    </div>

    <div class="mx-auto w-[92%] max-w-6xl px-4 sm:px-6">
      <PostGrid
        posts={pagePosts}
        readMoreLabel={readMoreLabel}
        pagination={{
          currentPage: pageNumber,
          totalPages: pagination.totalPages,
          basePath: "/blog/",
          summary,
          previousLabel,
          nextLabel,
        }}
      />
    </div>
  </main>
</SiteLayout>
