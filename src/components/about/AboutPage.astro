---
import LicenseBlock from "@/components/blog/LicenseBlock.astro";
import type { LandingContent } from "@/content";

type FormattedParagraph = {
  lead: string | null;
  rest: string;
};

type ProcessStep = {
  index: string;
  title: string;
  paragraphs: FormattedParagraph[];
};

type IntroductionBlock =
  | { type: "paragraph"; text: string }
  | { type: "bulletList"; items: string[] };

interface AboutPageProps {
  content: LandingContent;
}

const { content } = Astro.props as AboutPageProps;
const lang = content.locale === "ua" ? "uk" : content.locale === "en" ? "en" : "ru";

const containerClass = "mx-auto w-[90%] max-w-6xl px-4 sm:px-6";
const isEnglish = content.locale === "en";

const introductionBlocks: IntroductionBlock[] = (() => {
  const blocks: IntroductionBlock[] = [];
  const { paragraphs, bulletList } = content.introduction;

  for (const paragraph of paragraphs) {
    blocks.push({ type: "paragraph", text: paragraph });
    if (bulletList && bulletList.afterParagraph === paragraph) {
      blocks.push({ type: "bulletList", items: bulletList.items });
    }
  }

  return blocks;
})();

const processSteps: ProcessStep[] = content.process.steps.map((step, idx) => ({
  index: String(idx + 1).padStart(2, "0"),
  title: step.title,
  paragraphs: step.description.split("\n\n").map((paragraph) => {
    const match = paragraph.match(/^\*\*(.+?)\*\*\s*(.*)$/);
    if (match) {
      const [, lead, rest] = match;
      return { lead: lead.trim(), rest: rest.trim() };
    }
    return { lead: null, rest: paragraph.trim() };
  }),
}));

const detailIcons: Record<string, string> = {
  video: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6" aria-hidden="true"><rect x="4" y="5" width="12" height="14" rx="2"></rect><path d="m16 9 4-2v10l-4-2"></path></svg>`,
  donate: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6" aria-hidden="true"><path d="M12 21s-5.5-3.6-7.5-6.4c-1.7-2.5-.9-6.1 1.7-7.6 1.7-1 3.9-.6 5.3.8 1.4-1.4 3.6-1.8 5.3-.8 2.6 1.5 3.4 5.1 1.7 7.6C17.5 17.4 12 21 12 21Z"></path></svg>`,
  lock: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6" aria-hidden="true"><rect x="4" y="10" width="16" height="10" rx="2"></rect><path d="M8 10V7a4 4 0 0 1 8 0v3"></path><circle cx="12" cy="15" r="1.5"></circle></svg>`,
};

const starSvg = `<svg viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="0.5" class="h-4 w-4" aria-hidden="true"><path d="M12 2.3 14.36 7.1l5.22.76-3.78 3.68.89 5.2L12 14.9l-4.69 2.84.89-5.2L4.42 7.86l5.22-.76L12 2.3Z"></path></svg>`;
const starSlots = Array.from({ length: 5 }, (_, index) => index);
const hasHeroParagraphs = content.hero.paragraphs.length > 0;
---
{isEnglish ? (
  <div lang={lang} class="relative min-h-screen overflow-hidden bg-surface text-strong">
    <main class="relative z-10 flex flex-col gap-6 pb-12 pt-6 sm:gap-8 sm:pt-8">
      <section
        id="about"
        class={`relative isolate overflow-hidden rounded-[2.25rem] border border-soft px-6 py-10 text-left shadow-card backdrop-blur-sm section-card ${containerClass} flex flex-col gap-8 lg:flex-row lg:items-center sm:px-10`}
      >
        <div class="relative z-10 flex flex-1 flex-col gap-5 text-base leading-relaxed text-primary sm:text-lg">
          {introductionBlocks.map((block, index) =>
            block.type === "paragraph" ? (
              <p class="text-[clamp(1.05rem,3.1vw,1.28rem)]" key={`paragraph-${index}`}>
                {block.text}
              </p>
            ) : (
              <ul
                class="ml-6 list-disc space-y-2 text-[clamp(1.05rem,3.1vw,1.28rem)]"
                key={`bullet-${index}`}
              >
                {block.items.map((item, itemIndex) => (
                  <li key={itemIndex}>{item}</li>
                ))}
              </ul>
            )
          )}
        </div>
        <div class="relative z-10 flex flex-1 justify-center">
          <div class="section-card-strong overflow-hidden rounded-[2rem] border border-soft shadow-card">
            <img
              src={content.introduction.image}
              alt={content.introduction.imageAlt}
              width="900"
              height="1350"
              class="h-full w-full object-cover object-center motion-safe:animate-[float_11s_ease-in-out_infinite]"
              loading="lazy"
            />
          </div>
        </div>
      </section>

      <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
        <div class="flex flex-col gap-8 lg:grid lg:grid-cols-[minmax(0,1.2fr)_minmax(0,0.9fr)] lg:items-start">
          <div class="flex flex-col gap-4 text-base leading-relaxed text-primary sm:text-lg">
            <h2 class="text-[clamp(2.2rem,5vw,2.75rem)] font-semibold text-strong">
              {content.story.heading}
            </h2>
            <div class="flex flex-col gap-4">
              {content.story.paragraphs.map((paragraph) => (
                <p class="blog-card rounded-[1.75rem] border border-soft bg-surface p-6 text-[clamp(1.02rem,3vw,1.15rem)] leading-relaxed text-primary">
                  {paragraph}
                </p>
              ))}
            </div>
          </div>
          <div class="relative mt-6 overflow-hidden rounded-[2rem] border border-soft bg-surface/60 shadow-card lg:mt-0">
            <img
              src={content.story.image}
              alt={content.story.imageAlt}
              width="960"
              height="1280"
              class="h-full w-full object-cover"
              loading="lazy"
            />
            <div
              class="pointer-events-none absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent"
              aria-hidden="true"
            />
          </div>
        </div>
      </section>

      {content.lighthouse ? (
        <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
          <div class="flex flex-col gap-5 text-base leading-relaxed text-primary sm:text-lg">
            <h2 class="text-[clamp(2.1rem,5vw,2.6rem)] font-semibold text-strong">
              {content.lighthouse.heading}
            </h2>
            {content.lighthouse.paragraphs.map((paragraph) => (
              <p>{paragraph}</p>
            ))}
            <ul class="ml-4 list-disc space-y-2 text-[clamp(1.02rem,3vw,1.15rem)]">
              {content.lighthouse.bullets.map((bullet, index) => (
                <li key={index}>
                  {typeof bullet === "string" ? (
                    bullet
                  ) : (
                    <>
                      <a
                        href={bullet.href}
                        target={bullet.external ? "_blank" : undefined}
                        rel={bullet.external ? "noopener noreferrer" : undefined}
                        class="text-strong underline-offset-4 hover:underline"
                      >
                        {bullet.label}
                      </a>
                      {bullet.description}
                    </>
                  )}
                </li>
              ))}
            </ul>
            <p class="text-[clamp(1.05rem,3.2vw,1.2rem)] font-medium text-strong">
              {content.lighthouse.closing}
            </p>
          </div>
        </section>
      ) : null}

      <section class={`${containerClass} flex items-center justify-center`}>
        <LicenseBlock locale={content.locale} className="max-w-3xl" />
      </section>
    </main>
  </div>
) : (
  <div lang={lang} class="relative min-h-screen overflow-hidden bg-surface text-strong">
    <main class="relative z-10 flex flex-col gap-6 pb-12 pt-6 sm:gap-8 sm:pt-8">
      {hasHeroParagraphs ? (
        <section class={`relative isolate overflow-hidden rounded-[2.5rem] border border-soft px-6 py-10 text-center shadow-card section-card ${containerClass} sm:px-10`}>
          <div class="relative z-10 flex flex-col items-center gap-6">
            <div class="flex flex-col gap-5 text-center text-[clamp(1.125rem,3vw,1.45rem)] leading-relaxed text-primary md:max-w-4xl">
              {content.hero.paragraphs.map((paragraph) => (
                <p>{paragraph}</p>
              ))}
            </div>
            <div
              class="mx-auto h-px w-20 rounded-full bg-gradient-to-r from-transparent via-[#e7b57f] to-transparent md:mx-0"
              aria-hidden="true"
            />
          </div>
        </section>
      ) : null}

      <section
        id="about"
        class={`relative isolate overflow-hidden rounded-[2.25rem] border border-soft px-6 py-10 text-left shadow-card backdrop-blur-sm section-card ${containerClass} flex flex-col gap-8 lg:flex-row lg:items-center sm:px-10`}
      >
        <div class="relative z-10 flex flex-1 flex-col gap-6 text-base leading-relaxed text-primary sm:text-lg">
          <div class="flex flex-col gap-3">
            <span class="badge-soft inline-flex w-fit items-center gap-2 rounded-full px-4 py-1 text-xs font-semibold uppercase tracking-[0.35em] text-muted">
              {content.introduction.heading}
            </span>
            <span
              class="h-px w-16 rounded-full bg-gradient-to-r from-[#d7b48c] via-[#f5d7a4] to-transparent"
              aria-hidden="true"
            />
          </div>
          {content.introduction.paragraphs.map((paragraph) => (
            <p>{paragraph}</p>
          ))}
          {content.introduction.highlight ? (
            <>
              <span
                class="my-1 h-px w-16 rounded-full bg-gradient-to-r from-transparent via-[#d7b48c] to-transparent"
                aria-hidden="true"
              />
              <div class="flex flex-col gap-4">
                <p class="text-lg font-semibold text-strong">
                  {content.introduction.highlight.title}
                </p>
                {content.introduction.highlight.paragraphs.map((paragraph) => (
                  <p>{paragraph}</p>
                ))}
              </div>
            </>
          ) : null}
        </div>
        <div class="relative z-10 flex flex-1 justify-center">
          <div class="section-card-strong overflow-hidden rounded-[2rem] border border-soft shadow-card">
            <img
              src={content.introduction.image}
              alt={content.introduction.imageAlt}
              width="900"
              height="1350"
              class="h-full w-full object-cover object-center motion-safe:animate-[float_11s_ease-in-out_infinite]"
              loading="lazy"
            />
          </div>
        </div>
      </section>

      <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
        <div class="flex flex-col gap-4">
          <span class="badge-soft inline-flex w-fit items-center gap-2 rounded-full px-4 py-1 text-xs font-semibold uppercase tracking-[0.3em] text-muted">
            {content.process.heading}
          </span>
          <p class="text-base leading-relaxed text-primary sm:text-lg">
            {content.process.intro}
          </p>
        </div>
        <ol class="mt-6 grid gap-6 lg:grid-cols-2">
          {processSteps.map((step) => (
            <li class="group blog-card relative overflow-hidden rounded-[2rem] border border-soft p-6 transition-all duration-300 hover:-translate-y-1.5">
              <div class="relative z-10 flex flex-col gap-4">
                <span class="badge-soft inline-flex w-fit items-center gap-2 rounded-full px-3 py-1 text-xs font-semibold uppercase tracking-[0.25em] text-muted">
                  {step.index}
                </span>
                <p class="text-xl font-semibold text-strong">{step.title}</p>
                <div class="flex flex-col gap-3 text-base text-primary">
                  {step.paragraphs.map((paragraph) => (
                    <p>
                      {paragraph.lead ? <strong>{paragraph.lead}</strong> : null}
                      {paragraph.lead && paragraph.rest ? ` ${paragraph.rest}` : paragraph.rest}
                    </p>
                  ))}
                </div>
              </div>
            </li>
          ))}
        </ol>
      </section>

      <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
        <div class="flex flex-col gap-4">
          <span class="badge-soft inline-flex w-fit items-center gap-2 rounded-full px-4 py-1 text-xs font-semibold uppercase tracking-[0.3em] text-muted">
            {content.details.heading}
          </span>
        </div>
        <div class="mt-6 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {content.details.items.map((item) => (
            <article class="group blog-card relative flex h-full flex-col gap-4 overflow-hidden rounded-[2rem] border border-soft p-6 transition-all duration-300 hover:-translate-y-1.5">
              <div class="relative z-10 flex flex-col gap-4">
                <span
                  class="flex h-12 w-12 items-center justify-center rounded-full bg-gradient-to-br from-[#f6d7ad] to-[#f1bd78] text-muted shadow-[0_10px_25px_-12px_rgba(110,86,60,0.6)]"
                  set:html={detailIcons[item.icon]}
                />
                <h3 class="text-xl font-semibold text-strong">{item.title}</h3>
                <p class="text-base text-primary">{item.description}</p>
              </div>
            </article>
          ))}
        </div>
      </section>

      <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
        <div class="flex flex-col gap-4">
          <span class="badge-soft inline-flex w-fit items-center gap-2 rounded-full px-4 py-1 text-xs font-semibold uppercase tracking-[0.3em] text-muted">
            {content.faq.heading}
          </span>
        </div>
        <div class="mt-6 flex flex-col gap-6">
          {content.faq.items.map((item) => (
            <article class="blog-card relative overflow-hidden rounded-[2rem] border border-soft p-6 transition-all duration-300 hover:-translate-y-1">
              <span
                class="absolute left-0 top-0 h-full w-1 bg-gradient-to-b from-[#f2c48f] via-[#f6dcb9] to-transparent"
                aria-hidden="true"
              />
              <p class="text-lg font-semibold text-strong">{item.question}</p>
              <p class="mt-3 text-base text-primary">{item.answer}</p>
            </article>
          ))}
        </div>
      </section>

      <section class={`${containerClass} flex items-center justify-center`}>
        <div class="section-card-strong relative isolate flex w-full max-w-3xl flex-col items-center gap-6 overflow-hidden rounded-[2.75rem] border border-soft px-6 py-10 text-center shadow-card sm:px-10">
          <h2 class="relative z-10 text-[clamp(2rem,5vw,2.75rem)] font-semibold text-strong">
            {content.invitation.heading}
          </h2>
          <p class="relative z-10 max-w-2xl text-base leading-relaxed text-primary sm:text-lg">
            {content.invitation.body}
          </p>
          <div class="relative z-10 flex flex-wrap justify-center gap-3">
            {content.invitation.buttons.map((button) => (
              <a
                href={button.href}
                target="_blank"
                rel="noreferrer"
                class="button-primary inline-flex items-center justify-center gap-2 rounded-full px-6 py-3 text-sm font-semibold transition-all duration-300 hover:-translate-y-0.5"
              >
                {button.label}
              </a>
            ))}
          </div>
        </div>
      </section>

      <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
        <div class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
          <h2 class="text-[clamp(2rem,5vw,2.75rem)] font-semibold text-strong">
            {content.testimonials.heading}
          </h2>
          <span
            class="hidden h-px flex-1 bg-gradient-to-r from-transparent via-[rgba(240,186,121,0.5)] to-transparent md:block"
            aria-hidden="true"
          />
        </div>
        {content.testimonials.intro ? (
          <p class="mt-4 max-w-3xl text-base leading-relaxed text-primary sm:text-lg">
            {content.testimonials.intro}
          </p>
        ) : null}
        <div class="mt-6 grid gap-6 md:grid-cols-2">
          {content.testimonials.items.map((testimonial) => (
            <article class="group blog-card relative flex h-full flex-col gap-4 overflow-hidden rounded-[2rem] border border-soft p-6 transition-all duration-300 hover:-translate-y-1.5">
              <div
                class="pointer-events-none absolute inset-x-0 top-0 h-1 bg-gradient-to-r from-[#f4bd7b] via-[#f7d7a8] to-[#f4bd7b]"
                aria-hidden="true"
              />
              <div class="relative z-10 flex flex-col gap-3">
                <div class="flex items-center gap-1 text-[#e09b42]" aria-hidden="true">
                  {starSlots.map(() => (
                    <span set:html={starSvg} />
                  ))}
                </div>
                <p class="text-base leading-relaxed text-primary">{testimonial}</p>
              </div>
            </article>
          ))}
          {content.testimonials.cta ? (
            <article class="group blog-card relative flex h-full flex-col gap-4 overflow-hidden rounded-[2rem] border border-soft p-6 transition-all duration-300 hover:-translate-y-1.5">
              <div
                class="pointer-events-none absolute inset-x-0 top-0 h-1 bg-gradient-to-r from-[#f4bd7b] via-[#f7d7a8] to-[#f4bd7b]"
                aria-hidden="true"
              />
              <div class="relative z-10 flex h-full flex-col gap-4">
                <p class="text-base leading-relaxed text-primary">
                  {content.testimonials.cta.text}
                </p>
                <a
                  href={content.testimonials.cta.button.href}
                  target="_blank"
                  rel="noreferrer"
                  class="button-primary inline-flex w-full items-center justify-center gap-2 rounded-full px-5 py-2.5 text-sm font-semibold transition-all duration-300 hover:-translate-y-0.5 md:w-auto"
                >
                  {content.testimonials.cta.button.label}
                </a>
              </div>
            </article>
          ) : null}
        </div>
      </section>

      <section class={`rounded-[2.25rem] border border-soft px-6 py-10 shadow-card backdrop-blur-sm section-card ${containerClass} sm:px-10`}>
        <div class="flex flex-col gap-8">
          <div class="flex flex-col items-center gap-4 text-center lg:items-start lg:text-left">
            <h2 class="text-[clamp(2rem,5vw,2.75rem)] font-semibold text-strong">
              {content.story.heading}
            </h2>
            <span
              class="h-px w-24 rounded-full bg-gradient-to-r from-transparent via-[rgba(240,186,121,0.5)] to-transparent"
              aria-hidden="true"
            />
          </div>
          <div class="grid gap-8 lg:grid-cols-[minmax(0,1.2fr)_minmax(0,0.9fr)] lg:items-start">
            <div class="grid gap-5">
              {content.story.paragraphs.map((paragraph) => (
                <p class="blog-card rounded-[1.75rem] border border-soft bg-surface p-6 text-base leading-relaxed text-primary">
                  {paragraph}
                </p>
              ))}
            </div>
            <div class="relative overflow-hidden rounded-[2rem] border border-soft bg-surface/60 shadow-card">
              <img
                src={content.story.image}
                alt={content.story.imageAlt}
                width="960"
                height="1280"
                class="h-full w-full object-cover"
                loading="lazy"
              />
              <div
                class="pointer-events-none absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent"
                aria-hidden="true"
              />
            </div>
          </div>
        </div>
      </section>

      <section class={`${containerClass} flex items-center justify-center`}>
        <div class="section-card w-full max-w-3xl overflow-hidden rounded-[2.5rem] border border-soft px-6 py-6 text-center shadow-card">
          <p class="text-base leading-relaxed text-primary sm:text-lg">
            {content.footerNote}
          </p>
        </div>
      </section>

      <section class={`${containerClass} flex items-center justify-center`}>
        <LicenseBlock locale={content.locale} className="max-w-3xl" />
      </section>
    </main>
  </div>
)}
